gcc -g [0,1,2,3] main.c     --ключ -g компиляция для возможности отладки [уоровни отладки]
gcc -o [0,1,2,4]            --уровень оптимизации
gcc -ggdb                   --явное указание на использование отладчика

gdb <имя_программы>                        --запуск отладчика для программы
gdb <имя_программы> -c core                --отладка core дампа
gdb <имя_программы> -pid <номер_процесса>  --подключиться к работающему процессу

ulimid -c unlimited          --создание core дампа автоматически при крахе приложения

gdb>       --вид работающего отладчика и возможность писать команды:
      info breakpoints             --показать список точек останова
      where                        --показать стек и местоположение в нем
      run, r <аргументы>           --запуск программ <возможные аргументы (как при запуске программы)>
      continue, c [номер]          --продолжить если была точка останова. [номер точки останова]
      finish                       --запуск до конца текущей функции
      kill                         --убивает приложение
      step                         --идти по строкам со входом в каждую функцию
      next, n                      --переход к следующей строке кода
      until <номер>                --идти до номера строки
      nexti/stepi                  --переход к следующей ассемблерной инструкции
      b <имя_файла>:<номер_строки> --точка остановка (break point) на нужный номер строки
      list [+n/-n]                 --показать исходный код программы и/или n строк кода до или после
      print, p/[формат] <значение> --напечатать (переменную или адрес переменной)
                                     [формат вывода, например: o-восьмеричный]
                                                               x-16
                                                               d-10
                                                               f-float
                                                               c-char
                                                               
      x                            --проверка памяти начиная с некоторого адреса
        Примеры:
        x/4xb                      --по 4 значения в 16 ричном формате по одному байту
        x &a                       --содержание указателя на переменную а
        
      ptype                        --показать тип чего угодно
      
      disassemble                  --показать код ассемблера
      set disassemble-next-line on --показывать следующую инструкцию при переходе командой next
      quit, q                      --выход из gdb
      
$pc или $rip  --переменные содержат указатель на следующую инструкцию      
%eax и %ecx   --регистры общего назначения
%rbp и %rsp   --специальные регистры

|__64__|__56__|__48__|__40__|__32__|__24__|__16__|__8___|
|__________________________RAX__________________________|
|xxxxxxxxxxxxxxxxxxxxxxxxxxx|____________EAX____________|
|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|_____AX______|
|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|__AH__|__AL__|
